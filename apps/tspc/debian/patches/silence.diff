less verbose

Index: tspc-2.1.1/src/tsp/tsp_client.c
===================================================================
--- tspc-2.1.1.orig/src/tsp/tsp_client.c	2004-04-20 17:10:58.000000000 +0200
+++ tspc-2.1.1/src/tsp/tsp_client.c	2004-11-20 23:26:32.000000000 +0100
@@ -275,7 +275,7 @@
 
 start_show:
 
-	Display(0, ELInfo, "tspSetupTunnel", "Got tunnel parameters from server, setting up local tunnel");
+	Display(1, ELInfo, "tspSetupTunnel", "Got tunnel parameters from server, setting up local tunnel");
 
 	/* and start the show */
 	ret = tspStartLocal(socket, conf, &t, nt[conf->transport]);
@@ -337,8 +337,8 @@
 	LogInit("tspc", LogFile);
 
 	Display( 1, ELInfo, "tspMain", "----- TSP Client Version %s Initializing -------------------------", TSP_CLIENT_VERSION);
-	Display( 0, ELInfo, "tspMain", IDENTIFICATION);
-	Display( 0, ELInfo, "tspMain", "Initializing (use -h for help)\n");
+	Display( 1, ELInfo, "tspMain", IDENTIFICATION);
+	Display( 1, ELInfo, "tspMain", "Initializing (use -h for help)\n");
 
 	if((status = tspInitialize(argc, argv, &c)) != 0) {	// *** we have no uninitialize
 		if (status == -1) {
@@ -361,12 +361,12 @@
 
 	/* first try with RUDP */
 	c.transport = NET_TOOLS_T_RUDP;
-	Display( 0, ELInfo, "tspMain", "\nConnecting to server with reliable udp");
+	Display( 1, ELInfo, "tspMain", "\nConnecting to server with reliable udp");
 
 try_server:
 
 	if (c.transport == NET_TOOLS_T_TCP)
-		Display( 0, ELInfo, "tspMain", "\nConnecting to server with tcp");
+		Display( 1, ELInfo, "tspMain", "\nConnecting to server with tcp");
 
 	Display( 1, ELInfo, "tspMain", "Using TSP protocol version %s",
 		TspProtocolVersionStrings[version_index]); 
Index: tspc-2.1.1/platform/linux/tsp_local.c
===================================================================
--- tspc-2.1.1.orig/platform/linux/tsp_local.c	2004-11-20 23:19:14.000000000 +0100
+++ tspc-2.1.1/platform/linux/tsp_local.c	2004-11-20 23:25:56.000000000 +0100
@@ -143,7 +143,7 @@
 	{
 		  int tunfd;
 
-		  Display(0, ELInfo, "tspStartLocal", "Going daemon, check %s for tunnel creation status", LogFile);
+		  Display(1, ELInfo, "tspStartLocal", "Going daemon, check %s for tunnel creation status", LogFile);
 
 		  if (daemon(0,0) == -1) {
 			  Display(1, ELError, "tspStartLocal", "Unable to fork.");
